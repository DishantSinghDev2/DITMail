services:
  # Inbound MX Server
  inbound_mx:
    build:
      context: ./mx
    container_name: inbound-mx
    restart: unless-stopped
    ports:
      - "25:25"
    networks:
      - mail_network
    depends_on:
      - mongodb
      - redis
    volumes:
      # Mount the shared certs volume directly for Haraka to read
      - certs:/etc/letsencrypt
    environment:
      - MONGO_URI=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:27017/ditmail?authSource=admin
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379

  # Outbound SMTP Server
  outbound_smtp:
    build:
      context: ./smtp
    container_name: outbound-smtp
    restart: unless-stopped
    ports:
      - "587:587"
      - "465:465"
    networks:
      - mail_network
    depends_on:
      - mongodb
      - redis
    volumes:
      # Mount the shared certs volume directly for Haraka to read
      - certs:/etc/letsencrypt
    environment:
      - MONGO_URI=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:27017/ditmail?authSource=admin
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379

  # Nginx reverse proxy for Let's Encrypt validation
  acme_proxy:
    image: nginx:alpine
    container_name: acme-proxy
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - certbot_webroot:/var/www/certbot
      - ./nginx.conf:/etc/nginx/nginx.conf:ro # Add a simple nginx.conf

  # Certbot for certificate issuance and renewal
  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    volumes:
      - certs:/etc/letsencrypt
      - certbot_webroot:/var/www/certbot
    # This command runs, then the container stops. We run it on a schedule.
    command: >
      certonly --webroot --webroot-path=/var/www/certbot
      --email admin@ditmail.online --agree-tos --no-eff-email --force-renewal
      --key-type ecdsa --elliptic-curve secp384r1
      -d mx.ditmail.online -d smtp.ditmail.online

  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    networks:
      - mail_network
    env_file: .env
    volumes:
      - mongo_data:/data/db

  # Redis In-Memory Store
  redis:
    image: redis:7-alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD}
    networks:
      - mail_network
    volumes:
      - redis_data:/data

networks:
  mail_network:
    driver: bridge

volumes:
  certs:
    driver: local
  mongo_data:
    driver: local
  redis_data:
    driver: local
  certbot_webroot:
    driver: local